---
jobs:

- name: configure-pipeline
  plan:
  - in_parallel:
    - get: pipeline-source
      trigger: true
      params: {depth: 1}
  - set_pipeline: self
    file: pipeline-source/ci/pipeline.yml

- name: scan-18fgsa-concourse-task
  plan:
  - in_parallel: &resources
    - get: weekly
      trigger: true
    - get: gsa-concourse-task
      params:
        format: oci
      trigger: true
    - get: scan-source
      trigger: false
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: 18fgsa/concourse-task
  - put: ecr-concourse-task
    params:
      image: gsa-concourse-task/image.tar
      additional_tags: gsa-concourse-task/tag

- name: terraform-plan-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-ecr
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform/
      STACK_NAME: ecr
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: terraform-apply-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      passed: [terraform-plan-ecr]
      trigger: true
    - get: pipeline-tasks
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-ecr
      TERRAFORM_ACTION: apply

- name: list-images-task
  plan:
  - get: pipeline-source
  - task: list-images
    file: pipeline-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: concourse-task
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: scan-image-job
  plan:
  - get: image-tags
  - get: weekly
    trigger: true
  - get: scan-source
    trigger: false
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-concourse-task
  - load_var: tags
    file: image-tags/tags.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: "((concourse-task-repo)):((.:tag))"
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: s
  

resources:
- name: pipeline-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: [ci/*]

- name: scan-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: ["ci/scan-container.sh","ci/scan-container.yml"]

- name: terraform-config
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: [terraform/*]

- name: pipeline-tasks
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
    branch: master

- name: gsa-concourse-task
  type: registry-image
  source:
    repository: 18fgsa/concourse-task
    semver_constraint: ">= 1.0.0"

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: weekly
  type: time
  source:
    days: [Tuesday]

- name: ecr-concourse-task
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: concourse-task
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: image-tags
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags.json
    region_name: us-gov-west-1

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

---
jobs:

- name: configure-pipeline
  plan:
  - in_parallel:
    - get: pipeline-source
      trigger: true
      params: {depth: 1}
  - set_pipeline: self
    file: pipeline-source/ci/pipeline.yml

- name: audit-harden-concourse-task
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: scan-source
      trigger: false
    - get: image-source
      params:
        format: oci
      resource: ecr-harden-concourse-task
  - task: audit
    file: scan-source/ci/audit-ecr-container.yml
    vars: {image: harden-concourse-task}
  on_success:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-concourse-task image"
      body_text: "Here are the audit results for harden-concourse-task"
      attachment_globs: ["audit/cis-audit.html"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-concourse-task image - Failure"
      body_text: "The pipeline to audit-harden-concourse-task has failed! Please check me out *wink*"

- name: audit-harden-s3-resource-simple
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: scan-source
      trigger: false
    - get: image-source
      params:
        format: oci
      resource: ecr-harden-s3-resource-simple
  - task: audit
    file: scan-source/ci/audit-ecr-container.yml
    vars: {image: harden-s3-resource-simple}
  on_success:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-s3-resource-simple image"
      body_text: "Here are the audit results for harden-s3-resource-simple"
      attachment_globs: ["audit/cis-audit.html"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-s3-resource-simple image - Failure"
      body_text: "The pipeline to audit-harden-s3-resource-simple has failed! Please check me out *wink*"

- name: audit-harden-oracle-client
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: scan-source
      trigger: false
    - get: image-source
      params:
        format: oci
      resource: ecr-harden-oracle-client
  - task: audit
    file: scan-source/ci/audit-ecr-container.yml
    vars: {image: harden-oracle-image-task}
  on_success:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-oracle-client-task image"
      body_text: "Here are the audit results for harden-oracle-client-task"
      attachment_globs: ["audit/cis-audit.html"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-oracle-client-task image - Failure"
      body_text: "The pipeline to audit-harden-oracle-client-task has failed! Please check me out *wink*"

- name: audit-harden-sql-client
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: scan-source
      trigger: false
    - get: image-source
      params:
        format: oci
      resource: ecr-harden-sql-client
  - task: audit
    file: scan-source/ci/audit-ecr-container.yml
    vars: {image: harden-sql-client-image}
  on_success:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-sql-client image"
      body_text: "Here are the audit results for harden-sql-client"
      attachment_globs: ["audit/cis-audit.html"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "Audit Results for harden-sql-client image - Failure"
      body_text: "The pipeline to audit-harden-sql-client has failed! Please check me out *wink*"


- name: conmon-18fgsa-concourse-task
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: image-source
      params:
        format: oci
      resource: ecr-concourse-task
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: prep-email
    file: scan-source/ci/conmon-scan-ecr-container.yml
    params:
      FILE: concourse-task
      IMAGE: "((concourse-task-repo))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))
  on_success:
    put: send-an-email
    params:
      subject_text: "ConMon Results for concourse-task image scans"
      body_text: "Here is the conmon results for concourse-task"
      attachment_globs: ["output/concourse-task.xml"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "ConMon Results for concourse-task image scans - Failure"
      body_text: "The pipeline to conmon-18fgsa-concourse-task has failed! Please check me out *wink*"

- name: conmon-18fgsa-s3-resource-simple
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: image-source
      params:
        format: oci
      resource: ecr-s3-resource-simple
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: prep-email
    file: scan-source/ci/conmon-scan-ecr-container.yml
    params:
      FILE: s3-resource-simple
      IMAGE: "((s3-resource-simple-repo))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))
  on_success:
    put: send-an-email
    params:
      subject_text: "ConMon Results for s3-resource-simple image scans"
      body_text: "Here is the conmon results for s3-resource-simple"
      attachment_globs: ["output/s3-resource-simple.xml"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "ConMon Results for s3-resource-simple image scans - Failure"
      body_text: "The pipeline to conmon-18fgsa-s3-resource-simple has failed! Please check me out *wink*"

- name: conmon-18fgsa-sql-clients
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: image-source
      params:
        format: oci
      resource: ecr-sql-clients
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: prep-email
    file: scan-source/ci/conmon-scan-ecr-container.yml
    params:
      FILE: sql-clients
      IMAGE: "((sql-clients-repo))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))
  on_success:
    put: send-an-email
    params:
      subject_text: "ConMon Results for sql-clients image scans"
      body_text: "Here is the conmon results for sql-clients"
      attachment_globs: ["output/sql-clients.xml"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "ConMon Results for sql-clients image scans - Failure"
      body_text: "The pipeline to conmon-18fgsa-sql-clients has failed! Please check me out *wink*"

- name: scan-18fgsa-concourse-task
  plan:
  - in_parallel: &resources
    - get: weekly
      trigger: true
    - get: gsa-concourse-task
      params:
        format: oci
      trigger: true
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: 18fgsa/concourse-task
  - task: check
    file: scan-source/ci/cve-check.yml
    params:
      IMAGE: 18fgsa/concourse-task
  - put: ecr-concourse-task
    params:
      image: gsa-concourse-task/image.tar
      additional_tags: gsa-concourse-task/tag
  on_failure:
    put: slack
    params:
      text:  |
        :x: FAILED to upload concourse-task image to ECR
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
  on_success:
    put: slack
    params:
      text_file: message/alert.txt
      text: |
        :white_check_mark: $TEXT_FILE_CONTENT
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: scan-18fgsa-s3-resource-simple
  plan:
  - in_parallel: &resources
    - get: weekly
      trigger: true
    - get: gsa-s3-resource-simple
      params:
        format: oci
      trigger: true
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: 18fgsa/s3-resource-simple
  - task: check
    file: scan-source/ci/cve-check.yml
    params:
      IMAGE: 18fgsa/s3-resource-simple
  - put: ecr-s3-resource-simple
    params:
      image: gsa-s3-resource-simple/image.tar
      additional_tags: gsa-s3-resource-simple/tag
  on_failure:
    put: slack
    params:
      text:  |
        :x: FAILED to upload s3-resource-simple image to ECR
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
  on_success:
    put: slack
    params:
      text_file: message/alert.txt
      text: |
        :white_check_mark: $TEXT_FILE_CONTENT
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: scan-18fgsa-oracle-client
  plan:
  - in_parallel: &resources
    - get: weekly
      trigger: true
    - get: gsa-oracle-client
      params:
        format: oci
      trigger: true
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: 18fgsa/oracle-client
  - task: check
    file: scan-source/ci/cve-check.yml
    params:
      IMAGE: 18fgsa/oracle-client
  - put: ecr-oracle-client
    params:
      image: gsa-oracle-client/image.tar
      additional_tags: gsa-oracle-client/tag
  on_failure:
    put: slack
    params:
      text:  |
        :x: FAILED to upload oracle-client image to ECR
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
  on_success:
    put: slack
    params:
      text_file: message/alert.txt
      text: |
        :white_check_mark: $TEXT_FILE_CONTENT
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: scan-18fgsa-sql-clients
  plan:
  - in_parallel: &resources
    - get: weekly
      trigger: true
    - get: gsa-sql-clients
      params:
        format: oci
      trigger: true
    - get: scan-source
      trigger: false
    - get: grype-scan-ignore-config
      trigger: true
  - task: scan
    file: scan-source/ci/scan-container.yml
    params:
      IMAGE: 18fgsa/sql-clients
  - task: check
    file: scan-source/ci/cve-check.yml
    params:
      IMAGE: 18fgsa/sql-clients
  - put: ecr-sql-clients
    params:
      image: gsa-sql-clients/image.tar
      additional_tags: gsa-sql-clients/tag
  on_failure:
    put: slack
    params:
      text:  |
        :x: FAILED to upload sql-clients image to ECR
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
  on_success:
    put: slack
    params:
      text_file: message/alert.txt
      text: |
        :white_check_mark: $TEXT_FILE_CONTENT
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: terraform-plan-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-ecr
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform/
      STACK_NAME: ecr
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: terraform-apply-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      passed: [terraform-plan-ecr]
      trigger: true
    - get: pipeline-tasks
      passed: [terraform-plan-ecr]
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-ecr
      TERRAFORM_ACTION: apply

- name: list-tags-concourse-task
  plan:
  - get: scan-source
    passed: [scan-18fgsa-concourse-task]
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: concourse-task
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-s3-resource-simple
  plan:
  - get: scan-source
    passed: [scan-18fgsa-s3-resource-simple]
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: s3-resource-simple
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-oracle-client
  plan:
  - get: scan-source
    passed: [scan-18fgsa-oracle-client]
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: oracle-client
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-sql-clients
  plan:
  - get: scan-source
    passed: [scan-18fgsa-sql-clients]
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: sql-clients
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-harden-concourse-task
  plan:
  - get: scan-source
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: harden-concourse-task
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-harden-oracle-client
  plan:
  - get: scan-source
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: harden-oracle-image-task
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-harden-s3-resource-simple
  plan:
  - get: scan-source
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: harden-s3-resource-simple
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: list-tags-harden-sql-client
  plan:
  - get: scan-source
  - get: weekly
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: harden-sql-client-image
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: delete-tag-concourse-task
  plan:
  - get: scan-source
  - task: delete-image
    file: scan-source/ci/delete-image.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: concourse-task

- name: scan-ecr-concourse-task
  plan:
  - get: image-tags-concourse-task
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-concourse-task]
  - get: scan-source
    trigger: false
    passed: [list-tags-concourse-task]
  - get: grype-scan-ignore-config
    trigger: true
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-concourse-task
  - load_var: tags
    file: image-tags-concourse-task/tags-concourse-task.json
  - across:
    - var: tag
      values: ((.:tags))
    do:
    - task: scan-((.:tag))
      file: scan-source/ci/scan-ecr-container.yml
      params:
        IMAGE: "((concourse-task-repo)):((.:tag))"
        AWS_DEFAULT_REGION: us-gov-west-1
        REGISTRY: ((aws-ecr-registry))
    - task: check-((.:tag))
      file: scan-source/ci/ecr-cve-check.yml
      params:
        IMAGE: "((concourse-task-repo)):((.:tag))"
        IMAGENAME: "concourse-task:((.:tag))"
      on_failure:
        put: slack
        params:
          text:  |
            :x: FAILED to upload concourse-task image to ECR
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: '#cg-platform-news'
          username: ((username))
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
      on_success:
        put: slack
        params:
          text_file: message/alert.txt
          text: |
            :white_check_mark: $TEXT_FILE_CONTENT
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: '#cg-platform-news'
          username: ((username))
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40


- name: scan-ecr-s3-resource-simple
  plan:
  - get: image-tags-s3-resource-simple
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-s3-resource-simple]
  - get: scan-source
    trigger: false  
    passed: [list-tags-s3-resource-simple]
  - get: grype-scan-ignore-config
    trigger: true
  - get: gsa-s3-resource-simple
    params:
      format: oci
    resource: ecr-s3-resource-simple
  - load_var: tags
    file: image-tags-s3-resource-simple/tags-s3-resource-simple.json
  - across:
    - var: tag
      values: ((.:tags))
    do:
    - task: scan-((.:tag))
      file: scan-source/ci/scan-ecr-container.yml
      params:
        IMAGE: "((s3-resource-simple-repo)):((.:tag))"
        AWS_DEFAULT_REGION: us-gov-west-1
        REGISTRY: ((aws-ecr-registry))
    - task: check-((.:tag))
      file: scan-source/ci/ecr-cve-check.yml
      params:
        IMAGE: "((s3-resource-simple-repo)):((.:tag))"

- name: scan-ecr-oracle-client
  plan:
  - get: image-tags-oracle-client
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-oracle-client]
  - get: scan-source
    trigger: false
    passed: [list-tags-oracle-client]
  - get: grype-scan-ignore-config
    trigger: true
  - get: gsa-oracle-client
    params:
      format: oci
    resource: ecr-oracle-client
  - load_var: tags
    file: image-tags-oracle-client/tags-oracle-client.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container.yml
    params:
      IMAGE: "((oracle-client-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

- name: scan-ecr-sql-clients
  plan:
  - get: image-tags-sql-clients
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-sql-clients]
  - get: scan-source
    trigger: false
    passed: [list-tags-sql-clients]
  - get: grype-scan-ignore-config
    trigger: true
  - get: gsa-sql-clients
    params:
      format: oci
    resource: ecr-sql-clients
  - load_var: tags
    file: image-tags-sql-clients/tags-sql-clients.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container.yml
    params:
      IMAGE: "((sql-clients-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

- name: scan-ecr-harden-concourse-task
  plan:
  - get: image-tags-harden-concourse-task
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-harden-concourse-task]
  - get: scan-source
    trigger: false
    passed: [list-tags-harden-concourse-task]
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-harden-concourse-task
  - load_var: tags
    file: image-tags-harden-concourse-task/tags-harden-concourse-task.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container-no-ignore.yml
    params:
      IMAGE: "((harden-concourse-task-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

- name: scan-ecr-harden-oracle-client
  plan:
  - get: image-tags-harden-oracle-client
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-harden-oracle-client]
  - get: scan-source
    trigger: false
    passed: [list-tags-harden-oracle-client]
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-harden-oracle-client
  - load_var: tags
    file: image-tags-harden-oracle-client/tags-harden-oracle-image-task.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container-no-ignore.yml
    params:
      IMAGE: "((harden-oracle-client-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

- name: scan-ecr-harden-s3-resource-simple
  plan:
  - get: image-tags-harden-s3-resource-simple
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-harden-s3-resource-simple]
  - get: scan-source
    trigger: false
    passed: [list-tags-harden-s3-resource-simple]
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-harden-s3-resource-simple
  - load_var: tags
    file: image-tags-harden-s3-resource-simple/tags-harden-s3-resource-simple.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container-no-ignore.yml
    params:
      IMAGE: "((harden-s3-resource-simple-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

- name: scan-ecr-harden-sql-client
  plan:
  - get: image-tags-harden-sql-client
    trigger: true
  - get: weekly
    trigger: true
    passed: [list-tags-harden-sql-client]
  - get: scan-source
    trigger: false
    passed: [list-tags-harden-sql-client]
  - get: gsa-concourse-task
    params:
      format: oci
    resource: ecr-harden-sql-client
  - load_var: tags
    file: image-tags-harden-sql-client/tags-harden-sql-client-image.json
  - across:
    - var: tag
      values: ((.:tags))
    task: task-((.:tag))
    file: scan-source/ci/scan-ecr-container-no-ignore.yml
    params:
      IMAGE: "((harden-sql-client-repo)):((.:tag))"
      AWS_DEFAULT_REGION: us-gov-west-1
      REGISTRY: ((aws-ecr-registry))

resources:
- name: pipeline-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: [ci/*]
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: scan-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: ["ci/scan-container.sh",
            "ci/scan-container.yml",
            "ci/scan-ecr-container.sh",
            "ci/scan-ecr-container.yml",
            "ci/scan-ecr-container-no-ignore.sh",
            "ci/scan-ecr-container-no-ignore.yml",
            "ci/conmon-scan-ecr-container.sh",
            "ci/conmon-scan-ecr-container.yml",
            "ci/list-images.sh",
            "ci/list-images.yml",
            "ci/delete-image.sh",
            "ci/delete-image.yml",
            "ci/cve-check.sh",
            "ci/cve-check.yml",
            "ci/audit-ecr-container.sh",
            "ci/audit-ecr-container.yml",
            "ci/ecr-cve-check.sh",
            "ci/ecr-cve-check.yml"]
    commit_verification_keys: ((cloud-gov-pgp-keys))      

- name: terraform-config
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: inital-deploy
    paths: [terraform/*]
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: pipeline-tasks
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
    branch: master
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: gsa-concourse-task
  type: registry-image
  source:
    repository: 18fgsa/concourse-task
    semver_constraint: ">= 1.0.0"

- name: gsa-s3-resource-simple
  type: registry-image
  source:
    repository: 18fgsa/s3-resource-simple
    semver_constraint: ">= 1.2.0"

- name: gsa-oracle-client
  type: registry-image
  source:
    repository: 18fgsa/oracle-client
    semver_constraint: ">= 1.0.0"

- name: gsa-sql-clients
  type: registry-image
  source:
    repository: 18fgsa/sql-clients
    semver_constraint: ">= 1.0.0"

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: weekly
  type: time
  source:
    days: [Tuesday]

- name: ecr-concourse-task
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: concourse-task
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-s3-resource-simple
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: s3-resource-simple
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.2.0"

- name: ecr-oracle-client
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: oracle-client
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-sql-clients
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: sql-clients
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-harden-concourse-task
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-concourse-task
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-harden-oracle-client
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-oracle-image-task
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-harden-s3-resource-simple
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-s3-resource-simple
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-harden-sql-client
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-sql-client-image
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: image-tags-concourse-task
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-concourse-task.json
    region_name: us-gov-west-1

- name: image-tags-s3-resource-simple
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-s3-resource-simple.json
    region_name: us-gov-west-1

- name: image-tags-oracle-client
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-oracle-client.json
    region_name: us-gov-west-1

- name: image-tags-sql-clients
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-sql-clients.json
    region_name: us-gov-west-1

- name: image-tags-harden-concourse-task
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-harden-concourse-task.json
    region_name: us-gov-west-1

- name: image-tags-harden-oracle-client
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-harden-oracle-image-task.json
    region_name: us-gov-west-1

- name: image-tags-harden-s3-resource-simple
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-harden-s3-resource-simple.json
    region_name: us-gov-west-1

- name: image-tags-harden-sql-client
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-harden-sql-client-image.json
    region_name: us-gov-west-1

- name: send-an-email
  type: email-resource
  source:
    smtp:
      host: ((smtp-host))
      port: ((smtp-port))
      username: ((smtp-cloudgovbilling.username))
      password: ((smtp-cloudgovbilling.password))
      ca_cert: ((smtp-cert.certificate))
    from: ((smtp-email-from))
    to: [((smtp-email-to))]

- name: monthly
  type: cron-resource
  source:
    expression: "0 6 22 * *"
    location: "America/New_York"
    fire_immediately: true

- name: grype-scan-ignore-config
  type: s3-simple
  source:
    bucket: cg-container-scanning
    region: us-gov-west-1
    

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: email-resource
  type: docker-image
  source:
    repository: pcfseceng/email-resource
    tag: latest

- name: cron-resource
  type: docker-image
  source:
    repository: cftoolsmiths/cron-resource

- name: s3-simple
  type: docker-image
  source:
    repository: 18fgsa/s3-resource-simple

groups:
- name: all
  jobs:
  - configure-pipeline
  - audit-harden-concourse-task
  - audit-harden-s3-resource-simple
  - audit-harden-oracle-client
  - audit-harden-sql-client
  - conmon-18fgsa-concourse-task
  - conmon-18fgsa-s3-resource-simple
  - conmon-18fgsa-sql-clients
  - scan-18fgsa-concourse-task
  - scan-18fgsa-s3-resource-simple
  - scan-18fgsa-oracle-client
  - scan-18fgsa-sql-clients
  - terraform-plan-ecr
  - terraform-apply-ecr
  - list-tags-concourse-task
  - list-tags-s3-resource-simple
  - list-tags-oracle-client
  - list-tags-sql-clients
  - list-tags-harden-concourse-task
  - list-tags-harden-oracle-client
  - list-tags-harden-s3-resource-simple
  - list-tags-harden-sql-client
  - delete-tag-concourse-task
  - scan-ecr-concourse-task
  - scan-ecr-s3-resource-simple
  - scan-ecr-oracle-client
  - scan-ecr-sql-clients
  - scan-ecr-harden-concourse-task
  - scan-ecr-harden-oracle-client
  - scan-ecr-harden-s3-resource-simple
  - scan-ecr-harden-sql-client
- name: 18fgsa-scan
  jobs:
  - scan-18fgsa-concourse-task
  - scan-18fgsa-s3-resource-simple
  - scan-18fgsa-oracle-client
  - scan-18fgsa-sql-clients
- name: tags
  jobs:
  - list-tags-concourse-task
  - list-tags-s3-resource-simple
  - list-tags-oracle-client
  - list-tags-sql-clients
  - list-tags-harden-concourse-task
  - list-tags-harden-oracle-client
  - list-tags-harden-s3-resource-simple
  - list-tags-harden-sql-client
- name: ecr-scan
  jobs:
  - scan-ecr-concourse-task
  - scan-ecr-s3-resource-simple
  - scan-ecr-oracle-client
  - scan-ecr-sql-clients
- name: conmon-scan
  jobs:
  - conmon-18fgsa-concourse-task
  - conmon-18fgsa-s3-resource-simple
  - conmon-18fgsa-sql-clients
- name: hardened-scan
  jobs:
  - scan-ecr-harden-concourse-task
  - scan-ecr-harden-oracle-client
  - scan-ecr-harden-s3-resource-simple
  - scan-ecr-harden-sql-client
- name: terraform
  jobs:
  - terraform-plan-ecr
  - terraform-apply-ecr
- name: audit
  jobs:
  - audit-harden-concourse-task
  - audit-harden-s3-resource-simple
  - audit-harden-oracle-client
  - audit-harden-sql-client
---
jobs:

- name: configure-pipeline
  plan:
  - in_parallel:
    - get: pipeline-source
      trigger: true
      params: {depth: 1}
  - set_pipeline: self
    file: pipeline-source/ci/pipeline.yml

- name: audit-pages-build-container
  plan:
  - in_parallel: &resources
    - get: monthly
      trigger: true
    - get: scan-source
      trigger: false
    - get: image-source
      params:
        format: oci
      resource: pages-build-container-image
  - task: audit
    file: scan-source/ci/audit-ecr-container.yml
    vars:
      image: pages-build-container
      tag: pages-production
  on_success:
    put: send-an-email
    params:
      subject_text: "Audit Results for pages-build-container image"
      body_text: "Here are the audit results for pages-build-container"
      attachment_globs: ["audit/cis-audit.html"]
  on_failure:
    put: send-an-email
    params:
      subject_text: "Audit Results for pages-build-container image - Failure"
      body_text: "The pipeline to pages-build-container has failed! Please check me out *wink*"

- name: terraform-plan-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-ecr
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform/
      STACK_NAME: pages-ecr
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-pages-logs'
      username: ((slack-username))
      icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40

- name: terraform-apply-ecr
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      passed: [terraform-plan-ecr]
      trigger: true
    - get: pipeline-tasks
      passed: [terraform-plan-ecr]
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-ecr
      TERRAFORM_ACTION: apply

- name: list-tags-pages-build-container
  plan:
  - get: scan-source
  - get: weekly
    trigger: true
  - get: pages-build-container-image
    trigger: true
  - task: list-images
    file: scan-source/ci/list-images.yml
    params:
      AWS_DEFAULT_REGION: us-gov-west-1
      IMAGE_REPOSITORY: pages-build-container
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      STACK_NAME: ecr

- name: scan-ecr-pages-build-container
  plan:
  - in_parallel: &resources
    - get: image-tags-pages-build-container
      trigger: true
    - get: weekly
      trigger: true
      passed: [list-tags-pages-build-container]
    - get: scan-source
      trigger: false
      passed: [list-tags-pages-build-container]
    - get: grype-scan-ignore-config
      trigger: false
    - get: gsa-concourse-task
      params:
        format: oci
      resource: pages-build-container-image
  - load_var: tags
    file: image-tags-pages-build-container/tags-pages-build-container.json
  - across:
    - var: tag
      values: ((.:tags))
    do:
    - task: scan-((.:tag))
      file: scan-source/ci/scan-ecr-container.yml
      params:
        IMAGE: "((pages-build-container-repo)):((.:tag))"
        AWS_DEFAULT_REGION: us-gov-west-1
        REGISTRY: ((aws-ecr-registry))
    - task: check-((.:tag))
      file: scan-source/ci/ecr-cve-check.yml
      params:
        IMAGE: "((pages-build-container-repo)):((.:tag))"
        IMAGENAME: "pages-build-container:((.:tag))"
      on_failure:
        put: slack
        params:
          text:  |
            :x: FAILED pages-build-container CVE check
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: '#cg-pages-logs'
          username: ((slack-username))
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40
      on_success:
        put: slack
        params:
          text_file: message/alert.txt
          text: |
            $TEXT_FILE_CONTENT
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: '#cg-pages-logs'
          username: ((slack-username))
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=40


resources:
- name: pipeline-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: pages
    paths: [ci/*]

- name: scan-source
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: pages
    paths: ["ci/scan-container.sh",
            "ci/scan-container.yml",
            "ci/scan-ecr-container.sh",
            "ci/scan-ecr-container.yml",
            "ci/scan-ecr-container-no-ignore.sh",
            "ci/scan-ecr-container-no-ignore.yml",
            "ci/conmon-scan-ecr-container.sh",
            "ci/conmon-scan-ecr-container.yml",
            "ci/list-images.sh",
            "ci/list-images.yml",
            "ci/delete-image.sh",
            "ci/delete-image.yml",
            "ci/cve-check.sh",
            "ci/cve-check.yml",
            "ci/audit-ecr-container.sh",
            "ci/audit-ecr-container.yml",
            "ci/ecr-cve-check.sh",
            "ci/ecr-cve-check.yml"]     

- name: terraform-config
  type: git
  source:
    uri: https://github.com/cloud-gov/container-scanning
    branch: pages
    paths: [terraform/*]

- name: pipeline-tasks
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
    branch: master

- name: image-tags-pages-build-container
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ecr/tags-concourse-task.json
    region_name: us-gov-west-1

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: weekly
  type: time
  source:
    days: [Tuesday]

- name: pages-build-container-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr-aws-key))
    aws_secret_access_key: ((ecr-aws-secret))
    repository: pages-build-container
    aws_region: us-gov-west-1
    tag: pages-production

- name: send-an-email
  type: email-resource
  source:
    smtp:
      host: ((smtp-host))
      port: ((smtp-port))
      username: ((smtp-cloudgovbilling.username))
      password: ((smtp-cloudgovbilling.password))
      ca_cert: ((smtp-cert.certificate))
    from: ((smtp-email-from))
    to: [((smtp-email-to))]

- name: monthly
  type: cron-resource
  source:
    expression: "0 6 22 * *"
    location: "America/New_York"
    fire_immediately: true

- name: grype-scan-ignore-config
  type: s3-simple
  source:
    bucket: cg-container-scanning
    region: us-gov-west-1
    

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: email-resource
  type: docker-image
  source:
    repository: pcfseceng/email-resource
    tag: latest

- name: cron-resource
  type: docker-image
  source:
    repository: cftoolsmiths/cron-resource

- name: s3-simple
  type: docker-image
  source:
    repository: 18fgsa/s3-resource-simple
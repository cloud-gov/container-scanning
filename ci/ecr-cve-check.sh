#!/bin/bash

#Check dates of Critical and High CVEs
cat cves/output.json | jq -r '.matches | .[] | select(.vulnerability.severity == "Critical") | if .vulnerability.id | test("CVE") then .vulnerability.id else .relatedVulnerabilities[].id end' > critical_cves.txt
cat cves/output.json | jq -r '.matches | .[] | select(.vulnerability.severity == "High") | if .vulnerability.id | test("CVE") then .vulnerability.id else .relatedVulnerabilities[].id end' > high_cves.txt

past_due_critical_cves=()
past_due_high_cves=()
current_critical_cves=()
current_high_cves=()
failed_cves=()

#check list of Critical CVEs
while read cve; do
    if ! echo ${past_due_critical_cves[@]} | grep -q -w "$cve" && ! echo ${current_critical_cves[@]} | grep -q -w "$cve"
    then
      response=$(curl -fs --retry 3 https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=$cve)
      if [ $? -eq 0 ] #if curl is successful
      then
          modified_date=$(echo $response | jq -r '.vulnerabilities[].cve.lastModified')
          cve_date=$(date -d $modified_date  +"%Y%m%d")
          cutoff_date=$(date +"%Y%m%d" -d "-15 days")
          if [ $cve_date -lt $cutoff_date ]
          then
              past_due_critical_cves+=("$cve")
          else
              current_critical_cves+=("$cve")
          fi
      else
          failed_cves+=("$cve")
      fi
    fi
    sleep 10
done < critical_cves.txt

#check list of High CVEs
while read cve; do
    if ! echo ${past_due_high_cves[@]} | grep -q -w "$cve" && ! echo ${current_high_cves[@]} | grep -q -w "$cve"
    then
      response=$(curl -fs --retry 3 https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=$cve)
      if [ $? -eq 0 ] #if curl is successful
      then
          modified_date=$(echo $response | jq -r '.vulnerabilities[].cve.lastModified')
          cve_date=$(date -d $modified_date  +"%Y%m%d")
          cutoff_date=$(date +"%Y%m%d" -d "-30 days")
          if [ $cve_date -lt $cutoff_date ]
          then
              past_due_high_cves+=("$cve")
          else
              current_high_cves+=("$cve")
          fi
      else
          failed_cves+=("$cve")
      fi
    fi
    sleep 10
done < high_cves.txt

echo "Past Due CVEs"
echo "  Critical:"
for past_due_crit_issue in ${past_due_critical_cves[@]}; do
    echo "      $past_due_crit_issue"
done

echo "  High:"
for past_due_high_issue in ${past_due_high_cves[@]}; do
    echo "      $past_due_high_issue"
done

echo "Latest CVEs"
echo "  Critical:"
for crit_issue in ${current_critical_cves[@]}; do
    echo "      $crit_issue"
done

echo "  High:"
for high_issue in ${current_high_cves[@]}; do
    echo "      $high_issue"
done

echo "Unknown Issues: (No date found)"
for failed_issue in ${failed_cves[@]}; do
    echo "      $failed_issue"
done

if [ ${#past_due_critical_cves[@]} -ge 1 ] || [ ${#past_due_high_cves[@]} -ge 1 ]
then exit 1
fi

if [ ${#current_critical_cves[@]} -ge 1 ] || [ ${#current_high_cves[@]} -ge 1 ]
then echo ":warning: CVEs need to be reviewed for image ${IMAGENAME}." > message/alert.txt
else echo ":white_check_mark: ${IMAGENAME} passed CVE check" > message/alert.txt
fi
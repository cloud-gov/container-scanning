#!/bin/bash

#Check dates of Critical and High CVEs

cat cves/output.json | jq -r '.matches | .[] | select(.vulnerability.severity == "Critical") | if .vulnerability.id | test("CVE") then .vulnerability.id else .relatedVulnerabilities[].id end' > critical_cves.txt
cat cves/output.json | jq -r '.matches | .[] | select(.vulnerability.severity == "High") | if .vulnerability.id | test("CVE") then .vulnerability.id else .relatedVulnerabilities[].id end' > high_cves.txt

#check list of Critical CVEs

current_critical_cves=()
current_high_cves=()
failed_cves=()

echo "Past Due CVEs"
echo "  Critical:"

while read cve; do
    response=$(curl -fs --retry 3 https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=$cve)
    if [ $? -eq 0 ] #if curl is successful
    then
        modified_date=$(echo $response | jq -r '.vulnerabilities[].cve.lastModified')
        cve_date=$(date -d $modified_date  +"%Y%m%d")
        cutoff_date=$(date +"%Y%m%d" -d "-15 days")
        if [ $cve_date -lt $cutoff_date ]
            then echo "     $cve"
            else
            current_critical_cves+=("$cve")
        fi
    else
        failed_cves+=("$cve")
    fi
    sleep 10
done < critical_cves.txt

echo "  High:"
#check list of High CVEs
while read cve; do
    response=$(curl -fs --retry 3 https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=$cve)
    if [ $? -eq 0 ] #if curl is successful
    then
        modified_date=$(echo $response | jq -r '.vulnerabilities[].cve.lastModified')
        cve_date=$(date -d $modified_date  +"%Y%m%d")
        cutoff_date=$(date +"%Y%m%d" -d "-30 days")
        if [ $cve_date -lt $cutoff_date ]
            then echo "     $cve"
            else
            current_high_cves+=("$cve")
        fi
    else
        failed_cves+=("$cve")
    fi
    sleep 10
done < high_cves.txt

echo "Current Issues"
echo "  Critical:"
for crit_issue in ${current_critical_cves[@]}; do
    echo "      $crit_issue"
done

echo "  High:"
for high_issue in ${current_high_cves[@]}; do
    echo "      $high_issue"
done

echo "Unknown Issues: (Check the date on these CVEs manually"
for failed_issue in ${failed_cves[@]}; do
    echo "      $failed_issue"
done

if [ ${#current_critical_cves[@]} -ge 1 ] || [ ${#current_high_cves[@]} -ge 1 ]
then echo "Review needed for image ${IMAGE}. Successfully uploaded ${IMAGE} image to ECR" > message/alert.txt
else echo "Successfully uploaded ${IMAGE} image to ECR" > message/alert.txt
fi